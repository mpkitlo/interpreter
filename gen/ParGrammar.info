-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListDecl                                (4)
	ListDecl ->                                        (5)
	ListDecl -> Decl ListDecl                          (6)
	Decl -> Type Ident ';'                             (7)
	Decl -> Type Ident '=' Expr ';'                    (8)
	Decl -> Type Ident '(' ListArg ')' Block           (9)
	Arg -> Type Ident                                  (10)
	Arg -> Type '&' Ident                              (11)
	ListArg ->                                         (12)
	ListArg -> Arg                                     (13)
	ListArg -> Arg ',' ListArg                         (14)
	Block -> '{' ListStmt '}'                          (15)
	ListStmt ->                                        (16)
	ListStmt -> Stmt ListStmt                          (17)
	Stmt -> ';'                                        (18)
	Stmt -> Block                                      (19)
	Stmt -> Decl                                       (20)
	Stmt -> Ident '=' Expr ';'                         (21)
	Stmt -> 'return' Expr ';'                          (22)
	Stmt -> 'return' ';'                               (23)
	Stmt -> 'if' '(' Expr ')' Block                    (24)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (25)
	Stmt -> 'while' '(' Expr ')' Block                 (26)
	Stmt -> 'break'                                    (27)
	Stmt -> 'continue'                                 (28)
	Stmt -> Expr ';'                                   (29)
	Stmt -> 'print' '(' Expr ')'                       (30)
	Type -> 'int'                                      (31)
	Type -> 'string'                                   (32)
	Type -> 'bool'                                     (33)
	Type -> 'void'                                     (34)
	Expr6 -> Ident                                     (35)
	Expr6 -> Integer                                   (36)
	Expr6 -> 'true'                                    (37)
	Expr6 -> 'false'                                   (38)
	Expr6 -> Ident '(' ListExpr ')'                    (39)
	Expr6 -> String                                    (40)
	Expr6 -> '(' Expr ')'                              (41)
	Expr5 -> '-' Expr6                                 (42)
	Expr5 -> '!' Expr6                                 (43)
	Expr5 -> Expr6                                     (44)
	Expr4 -> Expr4 MulOp Expr5                         (45)
	Expr4 -> Expr5                                     (46)
	Expr3 -> Expr3 AddOp Expr4                         (47)
	Expr3 -> Expr4                                     (48)
	Expr2 -> Expr2 RelOp Expr3                         (49)
	Expr2 -> Expr3                                     (50)
	Expr1 -> Expr2 '&&' Expr1                          (51)
	Expr1 -> Expr2                                     (52)
	Expr -> Expr1 '||' Expr                            (53)
	Expr -> Expr1                                      (54)
	ListExpr ->                                        (55)
	ListExpr -> Expr                                   (56)
	ListExpr -> Expr ',' ListExpr                      (57)
	AddOp -> '+'                                       (58)
	AddOp -> '-'                                       (59)
	MulOp -> '*'                                       (60)
	MulOp -> '/'                                       (61)
	MulOp -> '%'                                       (62)
	RelOp -> '<'                                       (63)
	RelOp -> '<='                                      (64)
	RelOp -> '>'                                       (65)
	RelOp -> '>='                                      (66)
	RelOp -> '=='                                      (67)
	RelOp -> '!='                                      (68)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	';'            { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'bool'         { PT _ (TS _ 20) }
	'break'        { PT _ (TS _ 21) }
	'continue'     { PT _ (TS _ 22) }
	'else'         { PT _ (TS _ 23) }
	'false'        { PT _ (TS _ 24) }
	'if'           { PT _ (TS _ 25) }
	'int'          { PT _ (TS _ 26) }
	'print'        { PT _ (TS _ 27) }
	'return'       { PT _ (TS _ 28) }
	'string'       { PT _ (TS _ 29) }
	'true'         { PT _ (TS _ 30) }
	'void'         { PT _ (TS _ 31) }
	'while'        { PT _ (TS _ 32) }
	'{'            { PT _ (TS _ 33) }
	'||'           { PT _ (TS _ 34) }
	'}'            { PT _ (TS _ 35) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	ListDecl        rules 5, 6
	Decl            rules 7, 8, 9
	Arg             rules 10, 11
	ListArg         rules 12, 13, 14
	Block           rule  15
	ListStmt        rules 16, 17
	Stmt            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Type            rules 31, 32, 33, 34
	Expr6           rules 35, 36, 37, 38, 39, 40, 41
	Expr5           rules 42, 43, 44
	Expr4           rules 45, 46
	Expr3           rules 47, 48
	Expr2           rules 49, 50
	Expr1           rules 51, 52
	Expr            rules 53, 54
	ListExpr        rules 55, 56, 57
	AddOp           rules 58, 59
	MulOp           rules 60, 61, 62
	RelOp           rules 63, 64, 65, 66, 67, 68

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 5

	Program        goto state 3
	ListDecl       goto state 4
	Decl           goto state 5
	Type           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	Program -> ListDecl .                               (rule 4)

	%eof           reduce using rule 4


State 5

	ListDecl -> Decl . ListDecl                         (rule 6)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 5

	ListDecl       goto state 12
	Decl           goto state 5
	Type           goto state 6

State 6

	Decl -> Type . Ident ';'                            (rule 7)
	Decl -> Type . Ident '=' Expr ';'                   (rule 8)
	Decl -> Type . Ident '(' ListArg ')' Block          (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'bool' .                                    (rule 33)

	'&'            reduce using rule 33
	L_Ident        reduce using rule 33


State 8

	Type -> 'int' .                                     (rule 31)

	'&'            reduce using rule 31
	L_Ident        reduce using rule 31


State 9

	Type -> 'string' .                                  (rule 32)

	'&'            reduce using rule 32
	L_Ident        reduce using rule 32


State 10

	Type -> 'void' .                                    (rule 34)

	'&'            reduce using rule 34
	L_Ident        reduce using rule 34


State 11

	Decl -> Type Ident . ';'                            (rule 7)
	Decl -> Type Ident . '=' Expr ';'                   (rule 8)
	Decl -> Type Ident . '(' ListArg ')' Block          (rule 9)

	'('            shift, and enter state 13
	';'            shift, and enter state 14
	'='            shift, and enter state 15


State 12

	ListDecl -> Decl ListDecl .                         (rule 6)

	%eof           reduce using rule 6


State 13

	Decl -> Type Ident '(' . ListArg ')' Block          (rule 9)

	')'            reduce using rule 12
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 33
	ListArg        goto state 34
	Type           goto state 35

State 14

	Decl -> Type Ident ';' .                            (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'bool'         reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'if'           reduce using rule 7
	'int'          reduce using rule 7
	'print'        reduce using rule 7
	'return'       reduce using rule 7
	'string'       reduce using rule 7
	'true'         reduce using rule 7
	'void'         reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 15

	Decl -> Type Ident '=' . Expr ';'                   (rule 8)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 25

State 16

	Expr6 -> Ident .                                    (rule 35)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 39)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            shift, and enter state 60
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 17

	Expr6 -> Integer .                                  (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 18

	Expr6 -> String .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 19

	Expr5 -> Expr6 .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 20

	Expr4 -> Expr5 .                                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 21

	Expr4 -> Expr4 . MulOp Expr5                        (rule 45)
	Expr3 -> Expr4 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            shift, and enter state 57
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            shift, and enter state 58
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            shift, and enter state 59
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48

	MulOp          goto state 56

State 22

	Expr3 -> Expr3 . AddOp Expr4                        (rule 47)
	Expr2 -> Expr3 .                                    (rule 50)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'+'            shift, and enter state 54
	','            reduce using rule 50
	'-'            shift, and enter state 55
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	AddOp          goto state 53

State 23

	Expr2 -> Expr2 . RelOp Expr3                        (rule 49)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 51)
	Expr1 -> Expr2 .                                    (rule 52)

	'!='           shift, and enter state 46
	'&&'           shift, and enter state 47
	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'<'            shift, and enter state 48
	'<='           shift, and enter state 49
	'=='           shift, and enter state 50
	'>'            shift, and enter state 51
	'>='           shift, and enter state 52
	'||'           reduce using rule 52

	RelOp          goto state 45

State 24

	Expr -> Expr1 . '||' Expr                           (rule 53)
	Expr -> Expr1 .                                     (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'||'           shift, and enter state 44


State 25

	Decl -> Type Ident '=' Expr . ';'                   (rule 8)

	';'            shift, and enter state 43


State 26

	Expr5 -> '!' . Expr6                                (rule 43)

	'('            shift, and enter state 27
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 42

State 27

	Expr6 -> '(' . Expr ')'                             (rule 41)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 41

State 28

	Expr5 -> '-' . Expr6                                (rule 42)

	'('            shift, and enter state 27
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 40

State 29

	Expr6 -> 'false' .                                  (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 30

	Expr6 -> 'true' .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 31

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 32

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 33

	ListArg -> Arg .                                    (rule 13)
	ListArg -> Arg . ',' ListArg                        (rule 14)

	')'            reduce using rule 13
	','            shift, and enter state 39


State 34

	Decl -> Type Ident '(' ListArg . ')' Block          (rule 9)

	')'            shift, and enter state 38


State 35

	Arg -> Type . Ident                                 (rule 10)
	Arg -> Type . '&' Ident                             (rule 11)

	'&'            shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 36

State 36

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 37

	Arg -> Type '&' . Ident                             (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 72

State 38

	Decl -> Type Ident '(' ListArg ')' . Block          (rule 9)

	'{'            shift, and enter state 71

	Block          goto state 70

State 39

	ListArg -> Arg ',' . ListArg                        (rule 14)

	')'            reduce using rule 12
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 33
	ListArg        goto state 69
	Type           goto state 35

State 40

	Expr5 -> '-' Expr6 .                                (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 41

	Expr6 -> '(' Expr . ')'                             (rule 41)

	')'            shift, and enter state 68


State 42

	Expr5 -> '!' Expr6 .                                (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 43

	Decl -> Type Ident '=' Expr ';' .                   (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	';'            reduce using rule 8
	'bool'         reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'print'        reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'void'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 44

	Expr -> Expr1 '||' . Expr                           (rule 53)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 67

State 45

	Expr2 -> Expr2 RelOp . Expr3                        (rule 49)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 66

State 46

	RelOp -> '!=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 47

	Expr1 -> Expr2 '&&' . Expr1                         (rule 51)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 65

State 48

	RelOp -> '<' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 49

	RelOp -> '<=' .                                     (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 50

	RelOp -> '==' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 51

	RelOp -> '>' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 52

	RelOp -> '>=' .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 53

	Expr3 -> Expr3 AddOp . Expr4                        (rule 47)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 64

State 54

	AddOp -> '+' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 55

	AddOp -> '-' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 56

	Expr4 -> Expr4 MulOp . Expr5                        (rule 45)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 63

State 57

	MulOp -> '%' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 58

	MulOp -> '*' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 59

	MulOp -> '/' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 60

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 39)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	')'            reduce using rule 55
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 61
	ListExpr       goto state 62

State 61

	ListExpr -> Expr .                                  (rule 56)
	ListExpr -> Expr . ',' ListExpr                     (rule 57)

	')'            reduce using rule 56
	','            shift, and enter state 87


State 62

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 39)

	')'            shift, and enter state 86


State 63

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 64

	Expr4 -> Expr4 . MulOp Expr5                        (rule 45)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 47)

	'!='           reduce using rule 47
	'%'            shift, and enter state 57
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            shift, and enter state 58
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            shift, and enter state 59
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47

	MulOp          goto state 56

State 65

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'||'           reduce using rule 51


State 66

	Expr3 -> Expr3 . AddOp Expr4                        (rule 47)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 49)

	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'+'            shift, and enter state 54
	','            reduce using rule 49
	'-'            shift, and enter state 55
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49

	AddOp          goto state 53

State 67

	Expr -> Expr1 '||' Expr .                           (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53


State 68

	Expr6 -> '(' Expr ')' .                             (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 69

	ListArg -> Arg ',' ListArg .                        (rule 14)

	')'            reduce using rule 14


State 70

	Decl -> Type Ident '(' ListArg ')' Block .          (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	';'            reduce using rule 9
	'bool'         reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'print'        reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'true'         reduce using rule 9
	'void'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 71

	Block -> '{' . ListStmt '}'                         (rule 15)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 79
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 80
	'continue'     shift, and enter state 81
	'false'        shift, and enter state 29
	'if'           shift, and enter state 82
	'int'          shift, and enter state 8
	'print'        shift, and enter state 83
	'return'       shift, and enter state 84
	'string'       shift, and enter state 9
	'true'         shift, and enter state 30
	'void'         shift, and enter state 10
	'while'        shift, and enter state 85
	'{'            shift, and enter state 71
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 73
	Integer        goto state 17
	String         goto state 18
	Decl           goto state 74
	Block          goto state 75
	ListStmt       goto state 76
	Stmt           goto state 77
	Type           goto state 6
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 78

State 72

	Arg -> Type '&' Ident .                             (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 73

	Stmt -> Ident . '=' Expr ';'                        (rule 21)
	Expr6 -> Ident .                                    (rule 35)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 39)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            shift, and enter state 60
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            shift, and enter state 97
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 74

	Stmt -> Decl .                                      (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 75

	Stmt -> Block .                                     (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 76

	Block -> '{' ListStmt . '}'                         (rule 15)

	'}'            shift, and enter state 96


State 77

	ListStmt -> Stmt . ListStmt                         (rule 17)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 79
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 80
	'continue'     shift, and enter state 81
	'false'        shift, and enter state 29
	'if'           shift, and enter state 82
	'int'          shift, and enter state 8
	'print'        shift, and enter state 83
	'return'       shift, and enter state 84
	'string'       shift, and enter state 9
	'true'         shift, and enter state 30
	'void'         shift, and enter state 10
	'while'        shift, and enter state 85
	'{'            shift, and enter state 71
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 73
	Integer        goto state 17
	String         goto state 18
	Decl           goto state 74
	Block          goto state 75
	ListStmt       goto state 95
	Stmt           goto state 77
	Type           goto state 6
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 78

State 78

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 94


State 79

	Stmt -> ';' .                                       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 80

	Stmt -> 'break' .                                   (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 81

	Stmt -> 'continue' .                                (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 82

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 24)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 25)

	'('            shift, and enter state 93


State 83

	Stmt -> 'print' . '(' Expr ')'                      (rule 30)

	'('            shift, and enter state 92


State 84

	Stmt -> 'return' . Expr ';'                         (rule 22)
	Stmt -> 'return' . ';'                              (rule 23)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 91
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 90

State 85

	Stmt -> 'while' . '(' Expr ')' Block                (rule 26)

	'('            shift, and enter state 89


State 86

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 87

	ListExpr -> Expr ',' . ListExpr                     (rule 57)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	')'            reduce using rule 55
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 61
	ListExpr       goto state 88

State 88

	ListExpr -> Expr ',' ListExpr .                     (rule 57)

	')'            reduce using rule 57


State 89

	Stmt -> 'while' '(' . Expr ')' Block                (rule 26)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 102

State 90

	Stmt -> 'return' Expr . ';'                         (rule 22)

	';'            shift, and enter state 101


State 91

	Stmt -> 'return' ';' .                              (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 92

	Stmt -> 'print' '(' . Expr ')'                      (rule 30)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 100

State 93

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 24)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 25)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 99

State 94

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 95

	ListStmt -> Stmt ListStmt .                         (rule 17)

	'}'            reduce using rule 17


State 96

	Block -> '{' ListStmt '}' .                         (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 97

	Stmt -> Ident '=' . Expr ';'                        (rule 21)

	'!'            shift, and enter state 26
	'('            shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 29
	'true'         shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 16
	Integer        goto state 17
	String         goto state 18
	Expr6          goto state 19
	Expr5          goto state 20
	Expr4          goto state 21
	Expr3          goto state 22
	Expr2          goto state 23
	Expr1          goto state 24
	Expr           goto state 98

State 98

	Stmt -> Ident '=' Expr . ';'                        (rule 21)

	';'            shift, and enter state 106


State 99

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 24)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 25)

	')'            shift, and enter state 105


State 100

	Stmt -> 'print' '(' Expr . ')'                      (rule 30)

	')'            shift, and enter state 104


State 101

	Stmt -> 'return' Expr ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 102

	Stmt -> 'while' '(' Expr . ')' Block                (rule 26)

	')'            shift, and enter state 103


State 103

	Stmt -> 'while' '(' Expr ')' . Block                (rule 26)

	'{'            shift, and enter state 71

	Block          goto state 108

State 104

	Stmt -> 'print' '(' Expr ')' .                      (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 105

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 24)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 25)

	'{'            shift, and enter state 71

	Block          goto state 107

State 106

	Stmt -> Ident '=' Expr ';' .                        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 107

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 24)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 25)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         shift, and enter state 109
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 108

	Stmt -> 'while' '(' Expr ')' Block .                (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 109

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 25)

	'{'            shift, and enter state 71

	Block          goto state 110

State 110

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 69
Number of terminals: 38
Number of non-terminals: 24
Number of states: 111
